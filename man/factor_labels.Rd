% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/factor_labels.R
\name{factor_labels}
\alias{factor_labels}
\title{Function to create factor labels}
\usage{
factor_labels(x, key, ...)
}
\arguments{
\item{x}{a variable name WITHOUT group/time flag.}

\item{key}{a tibble or data frame containing two columns 1) variable names (without group/time flag),
and 2) variable values. NOTE: Variable values should be concatenated together using a semi-colon
(e.g., "one;two;three").}

\item{\dots}{additional parameters to pass to function. These include:
\itemize{
 \item \code{variableName_col}: An optional argument. This parameter is used to specify the name of the
 column/field in the codebook to extract variable names from.
 \item \code{valueLabels_col}: An optional argument. This parameter is used to specify the name of the
 column/field in the codebook to extract value labels from.
}}
}
\value{
A vector of values.
}
\description{
This function can be used to create factor labels for variables
in a data frame or tibble.
}
\examples{
# Example with data frame using default field names: variableName
# and variableValues
factor_labels_dat <- data.frame(variableName = c("sex", "race_black"),
valueLabels = c("Woman;Man;Agender;Something Else", "Unselected;Selected"))
factor_labels(x = "race_black", key = factor_labels_dat)

# Example with data frame using user-specified field names: var_names
# and value_labels
factor_labels_dat2 <- data.frame(var_names = c("edFund_fedLoan","belong_welcomed"),
value_labels = c("Unselected;Selected",
"Strongly disagree;Somewhat disagree;Neither disagree nor agree;Somewhat agree;Strongly agree"))
factor_labels(x = "belong_welcomed", key = factor_labels_dat2,
variableName_col = "var_names", valueLabels_col = "value_labels")

}
\author{
Ama Nyame-Mensah
}
