% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/factor_levels.R
\name{factor_levels}
\alias{factor_levels}
\title{Function to create factor levels}
\usage{
factor_levels(x, key, ...)
}
\arguments{
\item{x}{a variable name WITHOUT group/time flag.}

\item{key}{a tibble or data frame containing two columns 1) variable names (without group/time flag),
and 2) variable values. NOTE: Variable values should be concatenated together using a comma
(e.g., "1,2,3").}

\item{\dots}{additional parameters to pass to function.These include: variableName_col (an optional input
you can specify; variable names will be extracted from this column/field) and variableValues_col (an optional
input you can specify; variable values will be extracted from this column/field).
\itemize{
 \item \code{variableName_col}: An optional argument. This parameter is used to specify the name of the
 column/field in the codebook to extract variable names from.
 \item \code{variableValues_col}: An optional argument. This parameter is used to specify the name of the
 column/field in the codebook to extract variable values from.
}}
}
\value{
A vector of values.
}
\description{
This function can be used to create factor levels for variables
in a data frame or tibble.
}
\examples{
# Example with data frame using default field names: variableName and variableValues
factor_levels_dat <- data.frame(variableName = c("sex", "race_black"),
variableValues = c("1,2,3,4", "0,1"))
factor_levels(x = "sex", key = factor_levels_dat)

# Example with data frame using user-specified field names: var_names and var_values
factor_levels_dat2 <- data.frame(var_names = c("edFund_fedLoan","belong_welcomed"),
var_values = c("0,1", "1,2,3,4,5"))
factor_levels(x = "edFund_fedLoan", key = factor_levels_dat2, variableName_col = "var_names",
variableValues_col = "var_values")

}
\author{
Ama Nyame-Mensah
}
